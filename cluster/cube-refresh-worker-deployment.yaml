apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    service: cube-refresh-worker
  name: cube-refresh-worker
spec:
  replicas: 1
  selector:
    matchLabels:
      service: cube-refresh-worker
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        service: cube-refresh-worker
    spec:
      containers:
        - env: # Refer to https://cube.dev/docs/reference/environment-variables for more options
            - name: CUBEJS_API_SECRET
              value: "55519f7e-3f0c-4340-9fde-37a84835b144"
            - name: CUBEJS_CUBESTORE_HOST
              value: "cubestore-router" # USING THIS CUBESTORE HOST BECAUSE THE CUBESTORE ROUTER SERVICE IS NAMED "CUBESTORE-ROUTER"
            - name: CUBEJS_DB_HOST
              value: "host.docker.internal"
            - name: CUBEJS_DB_PORT
              value: "8123"  
            - name: CUBEJS_DB_NAME
              value: "users"
            - name: CUBEJS_DB_USER
              value: ""
            - name: CUBEJS_DB_PASS
              value: ""
            - name: CUBEJS_DB_TYPE
              value: "clickhouse"
            - name: CUBEJS_DEV_MODE
              value: "true" # NEVER RUN DEV MODE IN K8S
            - name: CUBEJS_EXTERNAL_DEFAULT
              value: "true"
            - name: CUBEJS_CACHE_AND_QUEUE_DRIVER
              value: "memory"
            #- name: CUBEJS_REDIS_URL
            #  value: redis://redis:6379 # USING THIS REDIS URL BECAUSE THE REDIS SERVICE IS NAMED "REDIS"
            # SPECIFY THIS INSTANCE TO ACT AS A REFRESH WORKER
            - name: CUBEJS_REFRESH_WORKER
              value: "true"
          image: mycube:test2
          imagePullPolicy: Never
          name: cube-refresh-worker
          resources: {}
          volumeMounts:
            - mountPath: /cube/conf/schema
              name: cube-api-schema
              readOnly: false
      restartPolicy: Always
      volumes:
        - name: cube-api-schema
          configMap:
            name: cube-api-schema
status: {}
